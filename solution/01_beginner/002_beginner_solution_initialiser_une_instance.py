class Livre:
    prix = 9.99

    def __init__(self, prix):
        self.prix = prix


harry_potter = Livre(19.99)

"""
Initialiser une instance - Solution

CODE:

    class Livre:
        prix = 9.99
     
        def __init__(self, prix):
            self.prix = prix
     
    harry_potter = Livre(19.99)

EXPLICATIONS:

    Pour initialiser une instance, on utilise la m√©thode __init__ qui est 
    appel√©e automatiquement lorsque l'on cr√©e une instance.
    
    üëâ √Ä l'int√©rieur de cette m√©thode, il ne faut pas oublier de mettre en 
    premier param√®tre self, qui correspond √† notre instance, et va nous 
    permettre √† l'int√©rieur de cette m√©thode de cr√©er un attribut propre √† 
    notre instance.
    
    Cet attribut prix est le deuxi√®me param√®tre que nous donnons √† la m√©thode 
    __init__.
    
    Ainsi, nous pouvons d√©finir un prix personnalis√© pour notre instance au 
    moment de sa cr√©ation :
    
    harry_potter = Livre(19.99)
    Et le r√©cup√©rer pour l'assigner √† notre instance (self) dans la m√©thode 
    __init__ :
    
    def __init__(self, prix):
        self.prix = prix
    Ainsi, on d√©finit un attribut prix uniquement sur notre instance (self) 
    et l'attribut de classe prix reste inchang√© √† 9.99‚Ç¨.



POINTS IMPORTANTS √Ä RETENIR:

    Pour initialiser une instance, on utilise la m√©thode __init__.
    
    Pour r√©f√©rer √† notre instance √† l'int√©rieur d'une m√©thode, on utilise le 
    param√®tre self.
    
    Pour cr√©er un attribut d'instance, on utilise la syntaxe 
    self.attribut = valeur.
"""